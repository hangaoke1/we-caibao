<template>
  <view class="u-recharge">
    <view class="u-tip"><text class="f-36 grey-9">充值金额</text></view>
    <view class="u-input-wrap">
      <text style="font-size:60rpx;">¥</text>
      <textarea type="number" class="u-input" v-model="money" ref="xInput" />
      <view class="u-clear">
        <text class="iconfont f-36" style="color: #ccc;" @tap="money = ''">&#xe726;</text>
      </view>
    </view>
    <view v-if="info.moneyList" class="u-choose-list">
      <view
        class="u-choose-item"
        v-for="item in info.moneyList || []"
        :key="item"
        :class="{ 'z-active': item == money }"
        @tap="handleChoose(item)"
      >
        <text class="f-28" :class="{ 'z-active': item == money }">{{ item }}元</text>
      </view>
    </view>
    <view class="u-action" @tap="handleConfirm"><text class="white-1">确认充值</text></view>
    <wxc-dialog
      title=""
      :show="isShow"
      :single="false"
      :show-bottom="false"
      :show-no-prompt="false"
    >
      <view slot="title" class="u-title">
        <text class="f-36">选择充值方式</text>
        <text
          class="iconfont grey-1 u-close"
          style="font-size: 30rpx;"
          @touchstart="wxcDialogCancelBtnClicked"
        >
          &#xe734;
        </text>
      </view>
      <view slot="content" class="u-list">
        <view class="u-list-item" v-for="channel in channelList" :key="channel.id">
          <view class="u-icon" @tap="goPay(channel)"><g-img width="60" height="60" src="/static/pay2.png"></g-img></view>
          <view class="u-info" @tap="goPay(channel)">
            <view>
              <text class="f-30">{{ channel.name }}</text>
            </view>
            <view>
              <text class="f-24 grey-6">{{ channel.info }}</text>
            </view>
          </view>
        </view>
      </view>
    </wxc-dialog>
  </view>
</template>

<script>
import user from '@/api/user';
import wxcDialog from '@/components/wxc-dialog/index.nvue';
import gImg from '@/components/g-img/index.nvue';
import config from '@/config/index.js';
import { get, post } from '@/api/index';
import hideKeyBoardMixin from '@/mixins/hideKeyBoard.js';
import proMixin from '@/mixins/pro.js';

export default {
  mixins: [hideKeyBoardMixin, proMixin],
  components: {
    wxcDialog,
    gImg
  },
  data() {
    return {
      loading: false,
      channelList: [],
      info: '',
      money: '',
      isShow: false
    };
  },
  created() {
    this.queryPayment();
  },
  methods: {
    queryPayment() {
      user.queryPayment().then(res => {
        this.info = res;
      });
    },
    queryPayChannel() {
      user.queryPayChannel().then(res => {
        this.channelList = res.list;
      });
    },
    handleChoose(item) {
      this.$refs.xInput.blur();
      this.money = item;
    },
    wxcPopupOverlayClicked() {
      this.isShow = false;
    },
    wxcDialogCancelBtnClicked() {
      this.isShow = false;
    },
    wxcDialogConfirmBtnClicked() {},
    handleConfirm() {
      this.$refs.xInput.blur();
      user
        .queryPayChannel({
          money: this.money
        })
        .then(res => {
          this.channelList = res.list;
          this.isShow = true;
        });
    },
    goPay(channel) {
      var vm = this;

      if (this.loading) {
        return;
      }
      this.loading = true;
      this.isShow = false;
      uni.showLoading({
        title: '充值中'
      });
      // 请求获取h5链接
      let P_RequestType = '';
      if (uni.getSystemInfoSync().platform == 'android') {
        P_RequestType = 2;
      } else {
        P_RequestType = 3;
      }

      const requestUrl = '/' + channel.appname;
      get(requestUrl, {
        P_Amount: this.money,
        P_RequestType
      })
        .then(res => {
          this.loading = false;
          uni.hideLoading();
          const payH5 = res.url;
          plus.runtime.openURL(payH5, () => {});
          uni.showModal({
            title: '温馨提示',
            content: '是否已经完成充值？',
            success: res => {
              if (res.confirm) {
                uni.switchTab({
                  url: '/pages/user/user'
                });
              } else if (res.cancel) {
              }
            }
          });
        })
        .catch(err => {
          uni.hideLoading();
          this.loading = false;
        });
    }
  }
};
</script>

<style lang="less">
@import '~@/styles/common.less';

.u-tip {
  padding: 10rpx 20rpx;
}
.u-input-wrap {
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 0 20rpx;
  margin-bottom: 30rpx;
}
.u-input {
  flex: 1;
  margin-left: 20rpx;
  width: 500rpx;
  height: 120rpx;
  font-size: 80rpx;
}
.u-choose-list {
  padding: 0 20rpx;
  flex-direction: row;
  justify-content: space-between;
  flex-wrap: wrap;
}
.u-choose-item {
  width: 220rpx;
  padding: 20rpx;
  margin-bottom: 20rpx;
  justify-content: center;
  align-items: center;
  border-width: 1rpx;
  border-style: solid;
  border-color: #ccc;
  border-radius: 10rpx;
}
.u-action {
  justify-content: center;
  align-items: center;
  width: 710rpx;
  height: 100rpx;
  margin-left: 20rpx;
  margin-top: 30rpx;
  border-radius: 10rpx;
  background-color: @red-6;
}
.u-title {
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20rpx;
  padding-left: 30rpx;
}
.u-close {
  padding: 30rpx;
}
.u-list-item {
  flex-direction: row;
  align-items: center;
  padding: 0 30rpx 30rpx 30rpx;
}
.u-icon {
  margin-right: 10rpx;
}
.z-active {
  color: @red-6;
  border-color: @red-6;
}
</style>
